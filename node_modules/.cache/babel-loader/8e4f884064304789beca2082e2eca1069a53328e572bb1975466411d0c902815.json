{"ast":null,"code":"let vendor = require('./vendor');\nlet Declaration = require('./declaration');\nlet Resolution = require('./resolution');\nlet Transition = require('./transition');\nlet Processor = require('./processor');\nlet Supports = require('./supports');\nlet Browsers = require('./browsers');\nlet Selector = require('./selector');\nlet AtRule = require('./at-rule');\nlet Value = require('./value');\nlet utils = require('./utils');\nlet hackFullscreen = require('./hacks/fullscreen');\nlet hackPlaceholder = require('./hacks/placeholder');\nlet hackPlaceholderShown = require('./hacks/placeholder-shown');\nlet hackFileSelectorButton = require('./hacks/file-selector-button');\nlet hackFlex = require('./hacks/flex');\nlet hackOrder = require('./hacks/order');\nlet hackFilter = require('./hacks/filter');\nlet hackGridEnd = require('./hacks/grid-end');\nlet hackAnimation = require('./hacks/animation');\nlet hackFlexFlow = require('./hacks/flex-flow');\nlet hackFlexGrow = require('./hacks/flex-grow');\nlet hackFlexWrap = require('./hacks/flex-wrap');\nlet hackGridArea = require('./hacks/grid-area');\nlet hackPlaceSelf = require('./hacks/place-self');\nlet hackGridStart = require('./hacks/grid-start');\nlet hackAlignSelf = require('./hacks/align-self');\nlet hackAppearance = require('./hacks/appearance');\nlet hackFlexBasis = require('./hacks/flex-basis');\nlet hackMaskBorder = require('./hacks/mask-border');\nlet hackMaskComposite = require('./hacks/mask-composite');\nlet hackAlignItems = require('./hacks/align-items');\nlet hackUserSelect = require('./hacks/user-select');\nlet hackFlexShrink = require('./hacks/flex-shrink');\nlet hackBreakProps = require('./hacks/break-props');\nlet hackWritingMode = require('./hacks/writing-mode');\nlet hackBorderImage = require('./hacks/border-image');\nlet hackAlignContent = require('./hacks/align-content');\nlet hackBorderRadius = require('./hacks/border-radius');\nlet hackBlockLogical = require('./hacks/block-logical');\nlet hackGridTemplate = require('./hacks/grid-template');\nlet hackInlineLogical = require('./hacks/inline-logical');\nlet hackGridRowAlign = require('./hacks/grid-row-align');\nlet hackTransformDecl = require('./hacks/transform-decl');\nlet hackFlexDirection = require('./hacks/flex-direction');\nlet hackImageRendering = require('./hacks/image-rendering');\nlet hackBackdropFilter = require('./hacks/backdrop-filter');\nlet hackBackgroundClip = require('./hacks/background-clip');\nlet hackTextDecoration = require('./hacks/text-decoration');\nlet hackJustifyContent = require('./hacks/justify-content');\nlet hackBackgroundSize = require('./hacks/background-size');\nlet hackGridRowColumn = require('./hacks/grid-row-column');\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns');\nlet hackGridColumnAlign = require('./hacks/grid-column-align');\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust');\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior');\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas');\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position');\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink');\nlet hackGradient = require('./hacks/gradient');\nlet hackIntrinsic = require('./hacks/intrinsic');\nlet hackPixelated = require('./hacks/pixelated');\nlet hackImageSet = require('./hacks/image-set');\nlet hackCrossFade = require('./hacks/cross-fade');\nlet hackDisplayFlex = require('./hacks/display-flex');\nlet hackDisplayGrid = require('./hacks/display-grid');\nlet hackFilterValue = require('./hacks/filter-value');\nlet hackAutofill = require('./hacks/autofill');\nSelector.hack(hackAutofill);\nSelector.hack(hackFullscreen);\nSelector.hack(hackPlaceholder);\nSelector.hack(hackPlaceholderShown);\nSelector.hack(hackFileSelectorButton);\nDeclaration.hack(hackFlex);\nDeclaration.hack(hackOrder);\nDeclaration.hack(hackFilter);\nDeclaration.hack(hackGridEnd);\nDeclaration.hack(hackAnimation);\nDeclaration.hack(hackFlexFlow);\nDeclaration.hack(hackFlexGrow);\nDeclaration.hack(hackFlexWrap);\nDeclaration.hack(hackGridArea);\nDeclaration.hack(hackPlaceSelf);\nDeclaration.hack(hackGridStart);\nDeclaration.hack(hackAlignSelf);\nDeclaration.hack(hackAppearance);\nDeclaration.hack(hackFlexBasis);\nDeclaration.hack(hackMaskBorder);\nDeclaration.hack(hackMaskComposite);\nDeclaration.hack(hackAlignItems);\nDeclaration.hack(hackUserSelect);\nDeclaration.hack(hackFlexShrink);\nDeclaration.hack(hackBreakProps);\nDeclaration.hack(hackWritingMode);\nDeclaration.hack(hackBorderImage);\nDeclaration.hack(hackAlignContent);\nDeclaration.hack(hackBorderRadius);\nDeclaration.hack(hackBlockLogical);\nDeclaration.hack(hackGridTemplate);\nDeclaration.hack(hackInlineLogical);\nDeclaration.hack(hackGridRowAlign);\nDeclaration.hack(hackTransformDecl);\nDeclaration.hack(hackFlexDirection);\nDeclaration.hack(hackImageRendering);\nDeclaration.hack(hackBackdropFilter);\nDeclaration.hack(hackBackgroundClip);\nDeclaration.hack(hackTextDecoration);\nDeclaration.hack(hackJustifyContent);\nDeclaration.hack(hackBackgroundSize);\nDeclaration.hack(hackGridRowColumn);\nDeclaration.hack(hackGridRowsColumns);\nDeclaration.hack(hackGridColumnAlign);\nDeclaration.hack(hackOverscrollBehavior);\nDeclaration.hack(hackGridTemplateAreas);\nDeclaration.hack(hackPrintColorAdjust);\nDeclaration.hack(hackTextEmphasisPosition);\nDeclaration.hack(hackTextDecorationSkipInk);\nValue.hack(hackGradient);\nValue.hack(hackIntrinsic);\nValue.hack(hackPixelated);\nValue.hack(hackImageSet);\nValue.hack(hackCrossFade);\nValue.hack(hackDisplayFlex);\nValue.hack(hackDisplayGrid);\nValue.hack(hackFilterValue);\nlet declsCache = new Map();\nclass Prefixes {\n  constructor(data, browsers) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.data = data;\n    this.browsers = browsers;\n    this.options = options;\n    [this.add, this.remove] = this.preprocess(this.select(this.data));\n    this.transition = new Transition(this);\n    this.processor = new Processor(this);\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache;\n    }\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, []);\n      this.cleanerCache = new Prefixes(this.data, empty, this.options);\n    } else {\n      return this;\n    }\n    return this.cleanerCache;\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = {\n      add: {},\n      remove: {}\n    };\n    for (let name in list) {\n      let data = list[name];\n      let add = data.browsers.map(i => {\n        let params = i.split(' ');\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        };\n      });\n      let notes = add.filter(i => i.note).map(i => `${this.browsers.prefix(i.browser)} ${i.note}`);\n      notes = utils.uniq(notes);\n      add = add.filter(i => this.browsers.isSelected(i.browser)).map(i => {\n        let prefix = this.browsers.prefix(i.browser);\n        if (i.note) {\n          return `${prefix} ${i.note}`;\n        } else {\n          return prefix;\n        }\n      });\n      add = this.sort(utils.uniq(add));\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'));\n      }\n      let all = data.browsers.map(i => this.browsers.prefix(i));\n      if (data.mistakes) {\n        all = all.concat(data.mistakes);\n      }\n      all = all.concat(notes);\n      all = utils.uniq(all);\n      if (add.length) {\n        selected.add[name] = add;\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i));\n        }\n      } else {\n        selected.remove[name] = all;\n      }\n    }\n    return selected;\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length;\n      let bLength = utils.removeNote(b).length;\n      if (aLength === bLength) {\n        return b.length - a.length;\n      } else {\n        return bLength - aLength;\n      }\n    });\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    };\n    for (let name in selected.add) {\n      let prefixes = selected.add[name];\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this);\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this);\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this));\n      } else {\n        let props = this.data[name].props;\n        if (props) {\n          let value = Value.load(name, prefixes, this);\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = {\n                values: []\n              };\n            }\n            add[prop].values.push(value);\n          }\n        } else {\n          let values = add[name] && add[name].values || [];\n          add[name] = Declaration.load(name, prefixes, this);\n          add[name].values = values;\n        }\n      }\n    }\n    let remove = {\n      selectors: []\n    };\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name];\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes);\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix));\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`;\n          remove[prefixed] = {\n            remove: true\n          };\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this);\n      } else {\n        let props = this.data[name].props;\n        if (props) {\n          let value = Value.load(name, [], this);\n          for (let prefix of prefixes) {\n            let old = value.old(prefix);\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {};\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = [];\n                }\n                remove[prop].values.push(old);\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p);\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes;\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue;\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue;\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {};\n              }\n              remove[prefixed].remove = true;\n            }\n          }\n        }\n      }\n    }\n    return [add, remove];\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop));\n    }\n    return declsCache.get(prop);\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop));\n    if (value === 'flex-direction') {\n      value = 'flex-flow';\n    }\n    return value;\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop);\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop);\n    return this.decl(prop).prefixed(prop, prefix);\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type];\n    let global = data['*'] && data['*'].values;\n    let values = data[prop] && data[prop].values;\n    if (global && values) {\n      return utils.uniq(global.concat(values));\n    } else {\n      return global || values || [];\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent;\n    let index = rule.index(decl);\n    let {\n      length\n    } = rule.nodes;\n    let unprefixed = this.unprefixed(decl.prop);\n    let checker = (step, callback) => {\n      index += step;\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index];\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break;\n          } else if (callback(other) === true) {\n            return true;\n          }\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n        }\n        index += step;\n      }\n      return false;\n    };\n    return {\n      up(callback) {\n        return checker(-1, callback);\n      },\n      down(callback) {\n        return checker(+1, callback);\n      }\n    };\n  }\n}\nmodule.exports = Prefixes;","map":{"version":3,"names":["vendor","require","Declaration","Resolution","Transition","Processor","Supports","Browsers","Selector","AtRule","Value","utils","hackFullscreen","hackPlaceholder","hackPlaceholderShown","hackFileSelectorButton","hackFlex","hackOrder","hackFilter","hackGridEnd","hackAnimation","hackFlexFlow","hackFlexGrow","hackFlexWrap","hackGridArea","hackPlaceSelf","hackGridStart","hackAlignSelf","hackAppearance","hackFlexBasis","hackMaskBorder","hackMaskComposite","hackAlignItems","hackUserSelect","hackFlexShrink","hackBreakProps","hackWritingMode","hackBorderImage","hackAlignContent","hackBorderRadius","hackBlockLogical","hackGridTemplate","hackInlineLogical","hackGridRowAlign","hackTransformDecl","hackFlexDirection","hackImageRendering","hackBackdropFilter","hackBackgroundClip","hackTextDecoration","hackJustifyContent","hackBackgroundSize","hackGridRowColumn","hackGridRowsColumns","hackGridColumnAlign","hackPrintColorAdjust","hackOverscrollBehavior","hackGridTemplateAreas","hackTextEmphasisPosition","hackTextDecorationSkipInk","hackGradient","hackIntrinsic","hackPixelated","hackImageSet","hackCrossFade","hackDisplayFlex","hackDisplayGrid","hackFilterValue","hackAutofill","hack","declsCache","Map","Prefixes","constructor","data","browsers","options","arguments","length","undefined","add","remove","preprocess","select","transition","processor","cleaner","cleanerCache","selected","empty","list","name","map","i","params","split","browser","note","notes","filter","prefix","uniq","isSelected","sort","flexbox","includes","all","mistakes","concat","prefixes","a","b","aLength","removeNote","bLength","selector","selectors","push","load","props","value","prop","values","old","prefixed","slice","p","olds","decl","has","set","get","unprefixed","normalize","type","global","group","rule","parent","index","nodes","checker","step","callback","other","withPrefix","up","down","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/untitled folder 5/CryptoBucks-Final-Code/node_modules/autoprefixer/lib/prefixes.js"],"sourcesContent":["let vendor = require('./vendor')\nlet Declaration = require('./declaration')\nlet Resolution = require('./resolution')\nlet Transition = require('./transition')\nlet Processor = require('./processor')\nlet Supports = require('./supports')\nlet Browsers = require('./browsers')\nlet Selector = require('./selector')\nlet AtRule = require('./at-rule')\nlet Value = require('./value')\nlet utils = require('./utils')\nlet hackFullscreen = require('./hacks/fullscreen')\nlet hackPlaceholder = require('./hacks/placeholder')\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\nlet hackFileSelectorButton = require('./hacks/file-selector-button')\nlet hackFlex = require('./hacks/flex')\nlet hackOrder = require('./hacks/order')\nlet hackFilter = require('./hacks/filter')\nlet hackGridEnd = require('./hacks/grid-end')\nlet hackAnimation = require('./hacks/animation')\nlet hackFlexFlow = require('./hacks/flex-flow')\nlet hackFlexGrow = require('./hacks/flex-grow')\nlet hackFlexWrap = require('./hacks/flex-wrap')\nlet hackGridArea = require('./hacks/grid-area')\nlet hackPlaceSelf = require('./hacks/place-self')\nlet hackGridStart = require('./hacks/grid-start')\nlet hackAlignSelf = require('./hacks/align-self')\nlet hackAppearance = require('./hacks/appearance')\nlet hackFlexBasis = require('./hacks/flex-basis')\nlet hackMaskBorder = require('./hacks/mask-border')\nlet hackMaskComposite = require('./hacks/mask-composite')\nlet hackAlignItems = require('./hacks/align-items')\nlet hackUserSelect = require('./hacks/user-select')\nlet hackFlexShrink = require('./hacks/flex-shrink')\nlet hackBreakProps = require('./hacks/break-props')\nlet hackWritingMode = require('./hacks/writing-mode')\nlet hackBorderImage = require('./hacks/border-image')\nlet hackAlignContent = require('./hacks/align-content')\nlet hackBorderRadius = require('./hacks/border-radius')\nlet hackBlockLogical = require('./hacks/block-logical')\nlet hackGridTemplate = require('./hacks/grid-template')\nlet hackInlineLogical = require('./hacks/inline-logical')\nlet hackGridRowAlign = require('./hacks/grid-row-align')\nlet hackTransformDecl = require('./hacks/transform-decl')\nlet hackFlexDirection = require('./hacks/flex-direction')\nlet hackImageRendering = require('./hacks/image-rendering')\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\nlet hackBackgroundClip = require('./hacks/background-clip')\nlet hackTextDecoration = require('./hacks/text-decoration')\nlet hackJustifyContent = require('./hacks/justify-content')\nlet hackBackgroundSize = require('./hacks/background-size')\nlet hackGridRowColumn = require('./hacks/grid-row-column')\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust')\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\nlet hackGradient = require('./hacks/gradient')\nlet hackIntrinsic = require('./hacks/intrinsic')\nlet hackPixelated = require('./hacks/pixelated')\nlet hackImageSet = require('./hacks/image-set')\nlet hackCrossFade = require('./hacks/cross-fade')\nlet hackDisplayFlex = require('./hacks/display-flex')\nlet hackDisplayGrid = require('./hacks/display-grid')\nlet hackFilterValue = require('./hacks/filter-value')\nlet hackAutofill = require('./hacks/autofill')\n\nSelector.hack(hackAutofill)\nSelector.hack(hackFullscreen)\nSelector.hack(hackPlaceholder)\nSelector.hack(hackPlaceholderShown)\nSelector.hack(hackFileSelectorButton)\nDeclaration.hack(hackFlex)\nDeclaration.hack(hackOrder)\nDeclaration.hack(hackFilter)\nDeclaration.hack(hackGridEnd)\nDeclaration.hack(hackAnimation)\nDeclaration.hack(hackFlexFlow)\nDeclaration.hack(hackFlexGrow)\nDeclaration.hack(hackFlexWrap)\nDeclaration.hack(hackGridArea)\nDeclaration.hack(hackPlaceSelf)\nDeclaration.hack(hackGridStart)\nDeclaration.hack(hackAlignSelf)\nDeclaration.hack(hackAppearance)\nDeclaration.hack(hackFlexBasis)\nDeclaration.hack(hackMaskBorder)\nDeclaration.hack(hackMaskComposite)\nDeclaration.hack(hackAlignItems)\nDeclaration.hack(hackUserSelect)\nDeclaration.hack(hackFlexShrink)\nDeclaration.hack(hackBreakProps)\nDeclaration.hack(hackWritingMode)\nDeclaration.hack(hackBorderImage)\nDeclaration.hack(hackAlignContent)\nDeclaration.hack(hackBorderRadius)\nDeclaration.hack(hackBlockLogical)\nDeclaration.hack(hackGridTemplate)\nDeclaration.hack(hackInlineLogical)\nDeclaration.hack(hackGridRowAlign)\nDeclaration.hack(hackTransformDecl)\nDeclaration.hack(hackFlexDirection)\nDeclaration.hack(hackImageRendering)\nDeclaration.hack(hackBackdropFilter)\nDeclaration.hack(hackBackgroundClip)\nDeclaration.hack(hackTextDecoration)\nDeclaration.hack(hackJustifyContent)\nDeclaration.hack(hackBackgroundSize)\nDeclaration.hack(hackGridRowColumn)\nDeclaration.hack(hackGridRowsColumns)\nDeclaration.hack(hackGridColumnAlign)\nDeclaration.hack(hackOverscrollBehavior)\nDeclaration.hack(hackGridTemplateAreas)\nDeclaration.hack(hackPrintColorAdjust)\nDeclaration.hack(hackTextEmphasisPosition)\nDeclaration.hack(hackTextDecorationSkipInk)\nValue.hack(hackGradient)\nValue.hack(hackIntrinsic)\nValue.hack(hackPixelated)\nValue.hack(hackImageSet)\nValue.hack(hackCrossFade)\nValue.hack(hackDisplayFlex)\nValue.hack(hackDisplayGrid)\nValue.hack(hackFilterValue)\n\nlet declsCache = new Map()\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data\n    this.browsers = browsers\n    this.options = options\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\n    this.transition = new Transition(this)\n    this.processor = new Processor(this)\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, [])\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\n    } else {\n      return this\n    }\n\n    return this.cleanerCache\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = { add: {}, remove: {} }\n\n    for (let name in list) {\n      let data = list[name]\n      let add = data.browsers.map(i => {\n        let params = i.split(' ')\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        }\n      })\n\n      let notes = add\n        .filter(i => i.note)\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\n      notes = utils.uniq(notes)\n\n      add = add\n        .filter(i => this.browsers.isSelected(i.browser))\n        .map(i => {\n          let prefix = this.browsers.prefix(i.browser)\n          if (i.note) {\n            return `${prefix} ${i.note}`\n          } else {\n            return prefix\n          }\n        })\n      add = this.sort(utils.uniq(add))\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'))\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i))\n      if (data.mistakes) {\n        all = all.concat(data.mistakes)\n      }\n      all = all.concat(notes)\n      all = utils.uniq(all)\n\n      if (add.length) {\n        selected.add[name] = add\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i))\n        }\n      } else {\n        selected.remove[name] = all\n      }\n    }\n\n    return selected\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length\n      let bLength = utils.removeNote(b).length\n\n      if (aLength === bLength) {\n        return b.length - a.length\n      } else {\n        return bLength - aLength\n      }\n    })\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    }\n    for (let name in selected.add) {\n      let prefixes = selected.add[name]\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this)\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this)\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this))\n      } else {\n        let props = this.data[name].props\n\n        if (props) {\n          let value = Value.load(name, prefixes, this)\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = { values: [] }\n            }\n            add[prop].values.push(value)\n          }\n        } else {\n          let values = (add[name] && add[name].values) || []\n          add[name] = Declaration.load(name, prefixes, this)\n          add[name].values = values\n        }\n      }\n    }\n\n    let remove = { selectors: [] }\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name]\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes)\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix))\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`\n          remove[prefixed] = { remove: true }\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this)\n      } else {\n        let props = this.data[name].props\n        if (props) {\n          let value = Value.load(name, [], this)\n          for (let prefix of prefixes) {\n            let old = value.old(prefix)\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {}\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = []\n                }\n                remove[prop].values.push(old)\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p)\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {}\n              }\n              remove[prefixed].remove = true\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove]\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop))\n    }\n\n    return declsCache.get(prop)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop))\n    if (value === 'flex-direction') {\n      value = 'flex-flow'\n    }\n    return value\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop)\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop)\n    return this.decl(prop).prefixed(prop, prefix)\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type]\n\n    let global = data['*'] && data['*'].values\n    let values = data[prop] && data[prop].values\n\n    if (global && values) {\n      return utils.uniq(global.concat(values))\n    } else {\n      return global || values || []\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent\n    let index = rule.index(decl)\n    let { length } = rule.nodes\n    let unprefixed = this.unprefixed(decl.prop)\n\n    let checker = (step, callback) => {\n      index += step\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index]\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break\n          } else if (callback(other) === true) {\n            return true\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n        }\n\n        index += step\n      }\n      return false\n    }\n\n    return {\n      up(callback) {\n        return checker(-1, callback)\n      },\n      down(callback) {\n        return checker(+1, callback)\n      }\n    }\n  }\n}\n\nmodule.exports = Prefixes\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}