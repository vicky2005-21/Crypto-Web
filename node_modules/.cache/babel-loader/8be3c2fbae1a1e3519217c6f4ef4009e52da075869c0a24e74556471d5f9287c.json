{"ast":null,"code":"let Declaration = require('../declaration');\nlet {\n  parseGridAreas,\n  warnMissedAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils');\nfunction getGridRows(tpl) {\n  return tpl.trim().slice(1, -1).split(/[\"']\\s*[\"']?/g);\n}\nclass GridTemplateAreas extends Declaration {\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let hasColumns = false;\n    let hasRows = false;\n    let parent = decl.parent;\n    let gap = getGridGap(decl);\n    gap = inheritGridGap(decl, gap) || gap;\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove());\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true;\n        let {\n          prop,\n          value\n        } = trackDecl;\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({\n            prop,\n            prefix\n          }),\n          value: prefixTrackValue({\n            value,\n            gap: gap.row\n          })\n        });\n      } else {\n        hasColumns = true;\n      }\n    });\n    let gridRows = getGridRows(decl.value);\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: `repeat(${gridRows.length}, auto)`,\n          gap: gap.row\n        }),\n        raws: {}\n      });\n    }\n\n    // warnings\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    });\n    let areas = parseGridAreas({\n      rows: gridRows,\n      gap\n    });\n    warnMissedAreas(areas, decl, result);\n    return decl;\n  }\n}\nGridTemplateAreas.names = ['grid-template-areas'];\nmodule.exports = GridTemplateAreas;","map":{"version":3,"names":["Declaration","require","parseGridAreas","warnMissedAreas","prefixTrackProp","prefixTrackValue","getGridGap","warnGridGap","inheritGridGap","getGridRows","tpl","trim","slice","split","GridTemplateAreas","insert","decl","prefix","prefixes","result","hasColumns","hasRows","parent","gap","walkDecls","i","remove","trackDecl","prop","value","cloneBefore","row","gridRows","length","raws","areas","rows","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/hacks/grid-template-areas.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet {\n  parseGridAreas,\n  warnMissedAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nfunction getGridRows(tpl) {\n  return tpl\n    .trim()\n    .slice(1, -1)\n    .split(/[\"']\\s*[\"']?/g)\n}\n\nclass GridTemplateAreas extends Declaration {\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let hasColumns = false\n    let hasRows = false\n    let parent = decl.parent\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove())\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true\n        let { prop, value } = trackDecl\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({ prop, prefix }),\n          value: prefixTrackValue({ value, gap: gap.row })\n        })\n      } else {\n        hasColumns = true\n      }\n    })\n\n    let gridRows = getGridRows(decl.value)\n\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: `repeat(${gridRows.length}, auto)`,\n          gap: gap.row\n        }),\n        raws: {}\n      })\n    }\n\n    // warnings\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    let areas = parseGridAreas({\n      rows: gridRows,\n      gap\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    return decl\n  }\n}\n\nGridTemplateAreas.names = ['grid-template-areas']\n\nmodule.exports = GridTemplateAreas\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAI;EACFC,cAAc;EACdC,eAAe;EACfC,eAAe;EACfC,gBAAgB;EAChBC,UAAU;EACVC,WAAW;EACXC;AACF,CAAC,GAAGP,OAAO,CAAC,cAAc,CAAC;AAE3B,SAASQ,WAAWA,CAACC,GAAG,EAAE;EACxB,OAAOA,GAAG,CACPC,IAAI,CAAC,CAAC,CACNC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,eAAe,CAAC;AAC3B;AAEA,MAAMC,iBAAiB,SAASd,WAAW,CAAC;EAC1C;AACF;AACA;EACEe,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACrC,IAAIF,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACF,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAElE,IAAIE,UAAU,GAAG,KAAK;IACtB,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,MAAM,GAAGN,IAAI,CAACM,MAAM;IACxB,IAAIC,GAAG,GAAGjB,UAAU,CAACU,IAAI,CAAC;IAC1BO,GAAG,GAAGf,cAAc,CAACQ,IAAI,EAAEO,GAAG,CAAC,IAAIA,GAAG;;IAEtC;IACA;IACAD,MAAM,CAACE,SAAS,CAAC,eAAe,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;;IAElD;IACAJ,MAAM,CAACE,SAAS,CAAC,8BAA8B,EAAEG,SAAS,IAAI;MAC5D,IAAIA,SAAS,CAACC,IAAI,KAAK,oBAAoB,EAAE;QAC3CP,OAAO,GAAG,IAAI;QACd,IAAI;UAAEO,IAAI;UAAEC;QAAM,CAAC,GAAGF,SAAS;QAC/BA,SAAS,CAACG,WAAW,CAAC;UACpBF,IAAI,EAAExB,eAAe,CAAC;YAAEwB,IAAI;YAAEX;UAAO,CAAC,CAAC;UACvCY,KAAK,EAAExB,gBAAgB,CAAC;YAAEwB,KAAK;YAAEN,GAAG,EAAEA,GAAG,CAACQ;UAAI,CAAC;QACjD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLX,UAAU,GAAG,IAAI;MACnB;IACF,CAAC,CAAC;IAEF,IAAIY,QAAQ,GAAGvB,WAAW,CAACO,IAAI,CAACa,KAAK,CAAC;IAEtC,IAAIT,UAAU,IAAI,CAACC,OAAO,IAAIE,GAAG,CAACQ,GAAG,IAAIC,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5DjB,IAAI,CAACc,WAAW,CAAC;QACfF,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAExB,gBAAgB,CAAC;UACtBwB,KAAK,EAAG,UAASG,QAAQ,CAACC,MAAO,SAAQ;UACzCV,GAAG,EAAEA,GAAG,CAACQ;QACX,CAAC,CAAC;QACFG,IAAI,EAAE,CAAC;MACT,CAAC,CAAC;IACJ;;IAEA;IACA3B,WAAW,CAAC;MACVgB,GAAG;MACHH,UAAU;MACVJ,IAAI;MACJG;IACF,CAAC,CAAC;IAEF,IAAIgB,KAAK,GAAGjC,cAAc,CAAC;MACzBkC,IAAI,EAAEJ,QAAQ;MACdT;IACF,CAAC,CAAC;IAEFpB,eAAe,CAACgC,KAAK,EAAEnB,IAAI,EAAEG,MAAM,CAAC;IAEpC,OAAOH,IAAI;EACb;AACF;AAEAF,iBAAiB,CAACuB,KAAK,GAAG,CAAC,qBAAqB,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAGzB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}