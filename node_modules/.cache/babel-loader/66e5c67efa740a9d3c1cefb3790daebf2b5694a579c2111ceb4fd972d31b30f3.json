{"ast":null,"code":"let flexSpec = require('./flex-spec');\nlet Declaration = require('../declaration');\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return decl.parent && !decl.parent.some(i => {\n      return i.prop && i.prop.startsWith('grid-');\n    });\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec === 2012) {\n      return prefix + 'flex-item-align';\n    }\n    return super.prefixed(prop, prefix);\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self';\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value;\n      return super.set(decl, prefix);\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix);\n    }\n    return undefined;\n  }\n}\nAlignSelf.names = ['align-self', 'flex-item-align'];\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n};\nmodule.exports = AlignSelf;","map":{"version":3,"names":["flexSpec","require","Declaration","AlignSelf","check","decl","parent","some","i","prop","startsWith","prefixed","prefix","spec","normalize","set","value","oldValues","undefined","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/untitled folder 5/CryptoBucks-Final-Code/node_modules/autoprefixer/lib/hacks/align-self.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return (\n      decl.parent &&\n      !decl.parent.some(i => {\n        return i.prop && i.prop.startsWith('grid-')\n      })\n    )\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-item-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignSelf.names = ['align-self', 'flex-item-align']\n\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignSelf\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAME,SAAS,SAASD,WAAW,CAAC;EAClCE,KAAKA,CAACC,IAAI,EAAE;IACV,OACEA,IAAI,CAACC,MAAM,IACX,CAACD,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,CAAC,IAAI;MACrB,OAAOA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACC,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;IAC7C,CAAC,CAAC;EAEN;;EAEA;AACF;AACA;EACEC,QAAQA,CAACF,IAAI,EAAEG,MAAM,EAAE;IACrB,IAAIC,IAAI;IACP,CAACA,IAAI,EAAED,MAAM,CAAC,GAAGZ,QAAQ,CAACY,MAAM,CAAC;IAClC,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,MAAM,GAAG,iBAAiB;IACnC;IACA,OAAO,KAAK,CAACD,QAAQ,CAACF,IAAI,EAAEG,MAAM,CAAC;EACrC;;EAEA;AACF;AACA;EACEE,SAASA,CAAA,EAAG;IACV,OAAO,YAAY;EACrB;;EAEA;AACF;AACA;EACEC,GAAGA,CAACV,IAAI,EAAEO,MAAM,EAAE;IAChB,IAAIC,IAAI,GAAGb,QAAQ,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjBR,IAAI,CAACW,KAAK,GAAGb,SAAS,CAACc,SAAS,CAACZ,IAAI,CAACW,KAAK,CAAC,IAAIX,IAAI,CAACW,KAAK;MAC1D,OAAO,KAAK,CAACD,GAAG,CAACV,IAAI,EAAEO,MAAM,CAAC;IAChC;IACA,IAAIC,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,KAAK,CAACE,GAAG,CAACV,IAAI,EAAEO,MAAM,CAAC;IAChC;IACA,OAAOM,SAAS;EAClB;AACF;AAEAf,SAAS,CAACgB,KAAK,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC;AAEnDhB,SAAS,CAACc,SAAS,GAAG;EACpB,UAAU,EAAE,KAAK;EACjB,YAAY,EAAE;AAChB,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGlB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}