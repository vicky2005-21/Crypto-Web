{"ast":null,"code":"let flexSpec = require('./flex-spec');\nlet Declaration = require('../declaration');\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes);\n    }\n    let values = decl.value.split(/\\s+/).filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse');\n    if (values.length === 0) {\n      return undefined;\n    }\n    let already = decl.parent.some(i => i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction');\n    if (already) {\n      return undefined;\n    }\n    let value = values[0];\n    let orient = value.includes('row') ? 'horizontal' : 'vertical';\n    let dir = value.includes('reverse') ? 'reverse' : 'normal';\n    let cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-orient';\n    cloned.value = orient;\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n    decl.parent.insertBefore(decl, cloned);\n    cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-direction';\n    cloned.value = dir;\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n    return decl.parent.insertBefore(decl, cloned);\n  }\n}\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient'];\nmodule.exports = FlexFlow;","map":{"version":3,"names":["flexSpec","require","Declaration","FlexFlow","insert","decl","prefix","prefixes","spec","values","value","split","filter","i","length","undefined","already","parent","some","prop","orient","includes","dir","cloned","clone","needCascade","raws","before","calcBefore","insertBefore","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/untitled folder 5/CryptoBucks-Final-Code/node_modules/autoprefixer/lib/hacks/flex-flow.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let values = decl.value\n      .split(/\\s+/)\n      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')\n    if (values.length === 0) {\n      return undefined\n    }\n\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let value = values[0]\n    let orient = value.includes('row') ? 'horizontal' : 'vertical'\n    let dir = value.includes('reverse') ? 'reverse' : 'normal'\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']\n\nmodule.exports = FlexFlow\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAME,QAAQ,SAASD,WAAW,CAAC;EACjC;AACF;AACA;EACEE,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IAC7B,IAAIC,IAAI;IACP,CAACA,IAAI,EAAEF,MAAM,CAAC,GAAGN,QAAQ,CAACM,MAAM,CAAC;IAClC,IAAIE,IAAI,KAAK,IAAI,EAAE;MACjB,OAAO,KAAK,CAACJ,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAC7C;IACA,IAAIE,MAAM,GAAGJ,IAAI,CAACK,KAAK,CACpBC,KAAK,CAAC,KAAK,CAAC,CACZC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,MAAM,IAAIA,CAAC,KAAK,QAAQ,IAAI,cAAc,CAAC;IAChE,IAAIJ,MAAM,CAACK,MAAM,KAAK,CAAC,EAAE;MACvB,OAAOC,SAAS;IAClB;IAEA,IAAIC,OAAO,GAAGX,IAAI,CAACY,MAAM,CAACC,IAAI,CAC5BL,CAAC,IACCA,CAAC,CAACM,IAAI,KAAKb,MAAM,GAAG,YAAY,IAAIO,CAAC,CAACM,IAAI,KAAKb,MAAM,GAAG,eAC5D,CAAC;IACD,IAAIU,OAAO,EAAE;MACX,OAAOD,SAAS;IAClB;IAEA,IAAIL,KAAK,GAAGD,MAAM,CAAC,CAAC,CAAC;IACrB,IAAIW,MAAM,GAAGV,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,UAAU;IAC9D,IAAIC,GAAG,GAAGZ,KAAK,CAACW,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,QAAQ;IAE1D,IAAIE,MAAM,GAAG,IAAI,CAACC,KAAK,CAACnB,IAAI,CAAC;IAC7BkB,MAAM,CAACJ,IAAI,GAAGb,MAAM,GAAG,YAAY;IACnCiB,MAAM,CAACb,KAAK,GAAGU,MAAM;IACrB,IAAI,IAAI,CAACK,WAAW,CAACpB,IAAI,CAAC,EAAE;MAC1BkB,MAAM,CAACG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,UAAU,CAACrB,QAAQ,EAAEF,IAAI,EAAEC,MAAM,CAAC;IAC9D;IACAD,IAAI,CAACY,MAAM,CAACY,YAAY,CAACxB,IAAI,EAAEkB,MAAM,CAAC;IAEtCA,MAAM,GAAG,IAAI,CAACC,KAAK,CAACnB,IAAI,CAAC;IACzBkB,MAAM,CAACJ,IAAI,GAAGb,MAAM,GAAG,eAAe;IACtCiB,MAAM,CAACb,KAAK,GAAGY,GAAG;IAClB,IAAI,IAAI,CAACG,WAAW,CAACpB,IAAI,CAAC,EAAE;MAC1BkB,MAAM,CAACG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,UAAU,CAACrB,QAAQ,EAAEF,IAAI,EAAEC,MAAM,CAAC;IAC9D;IACA,OAAOD,IAAI,CAACY,MAAM,CAACY,YAAY,CAACxB,IAAI,EAAEkB,MAAM,CAAC;EAC/C;AACF;AAEApB,QAAQ,CAAC2B,KAAK,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,YAAY,CAAC;AAE7DC,MAAM,CAACC,OAAO,GAAG7B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}