{"ast":null,"code":"'use strict';\n\nlet Container = require('./container');\nlet LazyResult, Processor;\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'root';\n    if (!this.nodes) this.nodes = [];\n  }\n  removeChild(child, ignore) {\n    let index = this.index(child);\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n    return super.removeChild(child);\n  }\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n    return nodes;\n  }\n  toResult() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let lazy = new LazyResult(new Processor(), this, opts);\n    return lazy.stringify();\n  }\n}\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant;\n};\nRoot.registerProcessor = dependant => {\n  Processor = dependant;\n};\nmodule.exports = Root;\nRoot.default = Root;\nContainer.registerRoot(Root);","map":{"version":3,"names":["Container","require","LazyResult","Processor","Root","constructor","defaults","type","nodes","removeChild","child","ignore","index","length","raws","before","normalize","sample","first","node","toResult","opts","arguments","undefined","lazy","stringify","registerLazyResult","dependant","registerProcessor","module","exports","default","registerRoot"],"sources":["/Users/vigneshchowdary/Desktop/untitled folder 5/CryptoBucks-Final-Code/node_modules/postcss/lib/root.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIC,UAAU,EAAEC,SAAS;AAEzB,MAAMC,IAAI,SAASJ,SAAS,CAAC;EAC3BK,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACC,IAAI,GAAG,MAAM;IAClB,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACA,KAAK,GAAG,EAAE;EAClC;EAEAC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACzB,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,KAAK,CAAC;IAE7B,IAAI,CAACC,MAAM,IAAIC,KAAK,KAAK,CAAC,IAAI,IAAI,CAACJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MACnD,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAACM,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,KAAK,CAACI,KAAK,CAAC,CAACE,IAAI,CAACC,MAAM;IAC3D;IAEA,OAAO,KAAK,CAACN,WAAW,CAACC,KAAK,CAAC;EACjC;EAEAM,SAASA,CAACN,KAAK,EAAEO,MAAM,EAAEV,IAAI,EAAE;IAC7B,IAAIC,KAAK,GAAG,KAAK,CAACQ,SAAS,CAACN,KAAK,CAAC;IAElC,IAAIO,MAAM,EAAE;MACV,IAAIV,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,IAAI,CAACC,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;UACzBI,MAAM,CAACH,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAACM,IAAI,CAACC,MAAM;QAChD,CAAC,MAAM;UACL,OAAOE,MAAM,CAACH,IAAI,CAACC,MAAM;QAC3B;MACF,CAAC,MAAM,IAAI,IAAI,CAACG,KAAK,KAAKD,MAAM,EAAE;QAChC,KAAK,IAAIE,IAAI,IAAIX,KAAK,EAAE;UACtBW,IAAI,CAACL,IAAI,CAACC,MAAM,GAAGE,MAAM,CAACH,IAAI,CAACC,MAAM;QACvC;MACF;IACF;IAEA,OAAOP,KAAK;EACd;EAEAY,QAAQA,CAAA,EAAY;IAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAT,MAAA,QAAAS,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IAChB,IAAIE,IAAI,GAAG,IAAItB,UAAU,CAAC,IAAIC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAEkB,IAAI,CAAC;IACtD,OAAOG,IAAI,CAACC,SAAS,CAAC,CAAC;EACzB;AACF;AAEArB,IAAI,CAACsB,kBAAkB,GAAGC,SAAS,IAAI;EACrCzB,UAAU,GAAGyB,SAAS;AACxB,CAAC;AAEDvB,IAAI,CAACwB,iBAAiB,GAAGD,SAAS,IAAI;EACpCxB,SAAS,GAAGwB,SAAS;AACvB,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG1B,IAAI;AACrBA,IAAI,CAAC2B,OAAO,GAAG3B,IAAI;AAEnBJ,SAAS,CAACgC,YAAY,CAAC5B,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}