{"ast":null,"code":"let flexSpec = require('./flex-spec');\nlet Declaration = require('../declaration');\nclass FlexDirection extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-direction';\n  }\n\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes);\n    }\n    let already = decl.parent.some(i => i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction');\n    if (already) {\n      return undefined;\n    }\n    let v = decl.value;\n    let orient, dir;\n    if (v === 'inherit' || v === 'initial' || v === 'unset') {\n      orient = v;\n      dir = v;\n    } else {\n      orient = v.includes('row') ? 'horizontal' : 'vertical';\n      dir = v.includes('reverse') ? 'reverse' : 'normal';\n    }\n    let cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-orient';\n    cloned.value = orient;\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n    decl.parent.insertBefore(decl, cloned);\n    cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-direction';\n    cloned.value = dir;\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n    return decl.parent.insertBefore(decl, cloned);\n  }\n\n  /**\n   * Clean two properties for 2009 spec\n   */\n  old(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec === 2009) {\n      return [prefix + 'box-orient', prefix + 'box-direction'];\n    } else {\n      return super.old(prop, prefix);\n    }\n  }\n}\nFlexDirection.names = ['flex-direction', 'box-direction', 'box-orient'];\nmodule.exports = FlexDirection;","map":{"version":3,"names":["flexSpec","require","Declaration","FlexDirection","normalize","insert","decl","prefix","prefixes","spec","already","parent","some","i","prop","undefined","v","value","orient","dir","includes","cloned","clone","needCascade","raws","before","calcBefore","insertBefore","old","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/hacks/flex-direction.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexDirection extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-direction'\n  }\n\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let v = decl.value\n    let orient, dir\n    if (v === 'inherit' || v === 'initial' || v === 'unset') {\n      orient = v\n      dir = v\n    } else {\n      orient = v.includes('row') ? 'horizontal' : 'vertical'\n      dir = v.includes('reverse') ? 'reverse' : 'normal'\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Clean two properties for 2009 spec\n   */\n  old(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return [prefix + 'box-orient', prefix + 'box-direction']\n    } else {\n      return super.old(prop, prefix)\n    }\n  }\n}\n\nFlexDirection.names = ['flex-direction', 'box-direction', 'box-orient']\n\nmodule.exports = FlexDirection\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}