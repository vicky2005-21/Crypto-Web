{"ast":null,"code":"let list = require('postcss').list;\nlet flexSpec = require('./flex-spec');\nlet Declaration = require('../declaration');\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec === 2009) {\n      return prefix + 'box-flex';\n    }\n    return super.prefixed(prop, prefix);\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex';\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0];\n      decl.value = Flex.oldValues[decl.value] || decl.value;\n      return super.set(decl, prefix);\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value);\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ');\n      }\n    }\n    return super.set(decl, prefix);\n  }\n}\nFlex.names = ['flex', 'box-flex'];\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n};\nmodule.exports = Flex;","map":{"version":3,"names":["list","require","flexSpec","Declaration","Flex","prefixed","prop","prefix","spec","normalize","set","decl","value","space","oldValues","components","length","slice","concat","join","names","auto","none","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/hacks/flex.js"],"sourcesContent":["let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,IAAI;AAElC,IAAIE,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIE,WAAW,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAMG,IAAI,SAASD,WAAW,CAAC;EAC7B;AACF;AACA;EACEE,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACrB,IAAIC,IAAI;IACP,CAACA,IAAI,EAAED,MAAM,CAAC,GAAGL,QAAQ,CAACK,MAAM,CAAC;IAClC,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,MAAM,GAAG,UAAU;IAC5B;IACA,OAAO,KAAK,CAACF,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EACrC;;EAEA;AACF;AACA;EACEE,SAASA,CAAA,EAAG;IACV,OAAO,MAAM;EACf;;EAEA;AACF;AACA;AACA;EACEC,GAAGA,CAACC,IAAI,EAAEJ,MAAM,EAAE;IAChB,IAAIC,IAAI,GAAGN,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjBG,IAAI,CAACC,KAAK,GAAGZ,IAAI,CAACa,KAAK,CAACF,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACtCD,IAAI,CAACC,KAAK,GAAGR,IAAI,CAACU,SAAS,CAACH,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAACC,KAAK;MACrD,OAAO,KAAK,CAACF,GAAG,CAACC,IAAI,EAAEJ,MAAM,CAAC;IAChC;IACA,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,IAAIO,UAAU,GAAGf,IAAI,CAACa,KAAK,CAACF,IAAI,CAACC,KAAK,CAAC;MACvC,IAAIG,UAAU,CAACC,MAAM,KAAK,CAAC,IAAID,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACpDJ,IAAI,CAACC,KAAK,GAAGG,UAAU,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAC7D;IACF;IACA,OAAO,KAAK,CAACT,GAAG,CAACC,IAAI,EAAEJ,MAAM,CAAC;EAChC;AACF;AAEAH,IAAI,CAACgB,KAAK,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;AAEjChB,IAAI,CAACU,SAAS,GAAG;EACfO,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE;AACR,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGpB,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}