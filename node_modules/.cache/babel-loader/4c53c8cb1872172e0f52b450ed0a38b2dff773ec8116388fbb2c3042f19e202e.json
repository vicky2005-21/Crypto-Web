{"ast":null,"code":"let flexSpec = require('./flex-spec');\nlet Declaration = require('../declaration');\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack';\n    }\n    return super.prefixed(prop, prefix);\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-content';\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value;\n      return super.set(decl, prefix);\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix);\n    }\n    return undefined;\n  }\n}\nAlignContent.names = ['align-content', 'flex-line-pack'];\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n};\nmodule.exports = AlignContent;","map":{"version":3,"names":["flexSpec","require","Declaration","AlignContent","prefixed","prop","prefix","spec","normalize","set","decl","value","oldValues","undefined","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/hacks/align-content.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-content'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack']\n\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = AlignContent\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAME,YAAY,SAASD,WAAW,CAAC;EACrC;AACF;AACA;EACEE,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACrB,IAAIC,IAAI;IACP,CAACA,IAAI,EAAED,MAAM,CAAC,GAAGN,QAAQ,CAACM,MAAM,CAAC;IAClC,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,MAAM,GAAG,gBAAgB;IAClC;IACA,OAAO,KAAK,CAACF,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EACrC;;EAEA;AACF;AACA;EACEE,SAASA,CAAA,EAAG;IACV,OAAO,eAAe;EACxB;;EAEA;AACF;AACA;EACEC,GAAGA,CAACC,IAAI,EAAEJ,MAAM,EAAE;IAChB,IAAIC,IAAI,GAAGP,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjBG,IAAI,CAACC,KAAK,GAAGR,YAAY,CAACS,SAAS,CAACF,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAACC,KAAK;MAC7D,OAAO,KAAK,CAACF,GAAG,CAACC,IAAI,EAAEJ,MAAM,CAAC;IAChC;IACA,IAAIC,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,KAAK,CAACE,GAAG,CAACC,IAAI,EAAEJ,MAAM,CAAC;IAChC;IACA,OAAOO,SAAS;EAClB;AACF;AAEAV,YAAY,CAACW,KAAK,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC;AAExDX,YAAY,CAACS,SAAS,GAAG;EACvB,UAAU,EAAE,KAAK;EACjB,YAAY,EAAE,OAAO;EACrB,eAAe,EAAE,SAAS;EAC1B,cAAc,EAAE;AAClB,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGb,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}