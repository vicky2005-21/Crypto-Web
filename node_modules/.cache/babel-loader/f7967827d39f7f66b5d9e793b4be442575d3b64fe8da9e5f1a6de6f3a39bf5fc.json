{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\nlet {\n  existsSync,\n  readFileSync\n} = require('fs');\nlet {\n  dirname,\n  join\n} = require('path');\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString();\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str);\n  }\n}\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return;\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, 'data:');\n    let prev = opts.map ? opts.map.prev : undefined;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile);\n    if (text) this.text = text;\n  }\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text);\n    }\n    return this.consumerCache;\n  }\n  withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  }\n  startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  }\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim();\n  }\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n    if (!comments) return;\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf('*/', start);\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length));\n    }\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding);\n  }\n  loadFile(path) {\n    this.root = dirname(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, 'utf-8').toString().trim();\n    }\n  }\n  loadMap(file, prev) {\n    if (prev === false) return false;\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev;\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error('Unable to load previous source map: ' + prevPath.toString());\n          }\n          return map;\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString();\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error('Unsupported previous source map format: ' + prev.toString());\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname(file), map);\n      return this.loadFile(map);\n    }\n  }\n  isMap(map) {\n    if (typeof map !== 'object') return false;\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string' || Array.isArray(map.sections);\n  }\n}\nmodule.exports = PreviousMap;\nPreviousMap.default = PreviousMap;","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","existsSync","readFileSync","dirname","join","fromBase64","str","Buffer","from","toString","window","atob","PreviousMap","constructor","css","opts","map","loadAnnotation","inline","startWith","annotation","prev","undefined","text","loadMap","mapFile","root","consumer","consumerCache","withContent","sourcesContent","length","string","start","substr","getAnnotationURL","sourceMapString","replace","trim","comments","match","lastIndexOf","pop","end","indexOf","substring","decodeInline","baseCharsetUri","baseUri","charsetUri","uri","test","decodeURIComponent","RegExp","lastMatch","encoding","Error","loadFile","path","file","prevPath","fromSourceMap","isMap","JSON","stringify","mappings","_mappings","Array","isArray","sections","module","exports","default"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/postcss/lib/previous-map.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}