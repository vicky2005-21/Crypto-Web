{"ast":null,"code":"let Declaration = require('../declaration');\nlet {\n  isPureNumber\n} = require('../utils');\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let clonedDecl = this.clone(decl);\n    let startProp = decl.prop.replace(/end$/, 'start');\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span');\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined;\n    }\n    clonedDecl.prop = spanProp;\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '');\n    } else {\n      let startDecl;\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d;\n      });\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + '';\n          clonedDecl.value = value;\n        } else {\n          return undefined;\n        }\n      } else {\n        decl.warn(result, `Can not prefix ${decl.prop} (${startProp} is not found)`);\n      }\n    }\n    decl.cloneBefore(clonedDecl);\n    return undefined;\n  }\n}\nGridEnd.names = ['grid-row-end', 'grid-column-end'];\nmodule.exports = GridEnd;","map":{"version":3,"names":["Declaration","require","isPureNumber","GridEnd","insert","decl","prefix","prefixes","result","clonedDecl","clone","startProp","prop","replace","spanProp","parent","some","i","undefined","value","includes","startDecl","walkDecls","d","Number","warn","cloneBefore","names","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/hacks/grid-end.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet { isPureNumber } = require('../utils')\n\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let clonedDecl = this.clone(decl)\n\n    let startProp = decl.prop.replace(/end$/, 'start')\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span')\n\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined\n    }\n\n    clonedDecl.prop = spanProp\n\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '')\n    } else {\n      let startDecl\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d\n      })\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + ''\n          clonedDecl.value = value\n        } else {\n          return undefined\n        }\n      } else {\n        decl.warn(\n          result,\n          `Can not prefix ${decl.prop} (${startProp} is not found)`\n        )\n      }\n    }\n\n    decl.cloneBefore(clonedDecl)\n\n    return undefined\n  }\n}\n\nGridEnd.names = ['grid-row-end', 'grid-column-end']\n\nmodule.exports = GridEnd\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAI;EAAEC;AAAa,CAAC,GAAGD,OAAO,CAAC,UAAU,CAAC;AAE1C,MAAME,OAAO,SAASH,WAAW,CAAC;EAChC;AACF;AACA;EACEI,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACrC,IAAIF,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACF,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAElE,IAAIE,UAAU,GAAG,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;IAEjC,IAAIM,SAAS,GAAGN,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;IAClD,IAAIC,QAAQ,GAAGR,MAAM,GAAGD,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;IAEzD,IAAIR,IAAI,CAACU,MAAM,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,IAAI,KAAKE,QAAQ,CAAC,EAAE;MAC9C,OAAOI,SAAS;IAClB;IAEAT,UAAU,CAACG,IAAI,GAAGE,QAAQ;IAE1B,IAAIT,IAAI,CAACc,KAAK,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC/BX,UAAU,CAACU,KAAK,GAAGd,IAAI,CAACc,KAAK,CAACN,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IACtD,CAAC,MAAM;MACL,IAAIQ,SAAS;MACbhB,IAAI,CAACU,MAAM,CAACO,SAAS,CAACX,SAAS,EAAEY,CAAC,IAAI;QACpCF,SAAS,GAAGE,CAAC;MACf,CAAC,CAAC;MACF,IAAIF,SAAS,EAAE;QACb,IAAInB,YAAY,CAACmB,SAAS,CAACF,KAAK,CAAC,EAAE;UACjC,IAAIA,KAAK,GAAGK,MAAM,CAACnB,IAAI,CAACc,KAAK,CAAC,GAAGK,MAAM,CAACH,SAAS,CAACF,KAAK,CAAC,GAAG,EAAE;UAC7DV,UAAU,CAACU,KAAK,GAAGA,KAAK;QAC1B,CAAC,MAAM;UACL,OAAOD,SAAS;QAClB;MACF,CAAC,MAAM;QACLb,IAAI,CAACoB,IAAI,CACPjB,MAAM,EACL,kBAAiBH,IAAI,CAACO,IAAK,KAAID,SAAU,gBAC5C,CAAC;MACH;IACF;IAEAN,IAAI,CAACqB,WAAW,CAACjB,UAAU,CAAC;IAE5B,OAAOS,SAAS;EAClB;AACF;AAEAf,OAAO,CAACwB,KAAK,GAAG,CAAC,cAAc,EAAE,iBAAiB,CAAC;AAEnDC,MAAM,CAACC,OAAO,GAAG1B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}