{"ast":null,"code":"let Browsers = require('./browsers');\nlet vendor = require('./vendor');\nlet utils = require('./utils');\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor();\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i];\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned));\n    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues' && i !== 'proxyCache') {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned);\n      }\n      cloned[i] = value;\n    }\n  }\n  return cloned;\n}\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {};\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass;\n      return this.hacks[name];\n    });\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name];\n    if (Klass) {\n      return new Klass(name, prefixes, all);\n    } else {\n      return new this(name, prefixes, all);\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes;\n    this.name = name;\n    this.all = all;\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix;\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix;\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop);\n    } else if (node.type === 'root') {\n      prefix = false;\n    } else if (node.type === 'rule' && node.selector.includes(':-') && /:(-\\w+-)/.test(node.selector)) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1];\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name);\n    } else {\n      prefix = this.parentPrefix(node.parent);\n    }\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false;\n    }\n    node._autoprefixerPrefix = prefix;\n    return node._autoprefixerPrefix;\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined;\n    }\n    let parent = this.parentPrefix(node);\n    let prefixes = this.prefixes.filter(prefix => !parent || parent === utils.removeNote(prefix));\n    let added = [];\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix);\n      }\n    }\n    return added;\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides);\n  }\n}\nmodule.exports = Prefixer;","map":{"version":3,"names":["Browsers","require","vendor","utils","clone","obj","parent","cloned","constructor","i","Object","keys","value","Array","isArray","map","x","Prefixer","hack","klass","hacks","names","name","load","prefixes","all","Klass","node","overrides","parentPrefix","prefix","_autoprefixerPrefix","type","prop","selector","includes","test","match","process","result","check","undefined","filter","removeNote","added","add","concat","push","module","exports"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/autoprefixer/lib/prefixer.js"],"sourcesContent":["let Browsers = require('./browsers')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i]\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned))\n    } else if (\n      i !== '_autoprefixerPrefix' &&\n      i !== '_autoprefixerValues' &&\n      i !== 'proxyCache'\n    ) {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned)\n      }\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {}\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass\n      return this.hacks[name]\n    })\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name]\n    if (Klass) {\n      return new Klass(name, prefixes, all)\n    } else {\n      return new this(name, prefixes, all)\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes\n    this.name = name\n    this.all = all\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop)\n    } else if (node.type === 'root') {\n      prefix = false\n    } else if (\n      node.type === 'rule' &&\n      node.selector.includes(':-') &&\n      /:(-\\w+-)/.test(node.selector)\n    ) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1]\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name)\n    } else {\n      prefix = this.parentPrefix(node.parent)\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false\n    }\n\n    node._autoprefixerPrefix = prefix\n\n    return node._autoprefixerPrefix\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined\n    }\n\n    let parent = this.parentPrefix(node)\n\n    let prefixes = this.prefixes.filter(\n      prefix => !parent || parent === utils.removeNote(prefix)\n    )\n\n    let added = []\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix)\n      }\n    }\n\n    return added\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides)\n  }\n}\n\nmodule.exports = Prefixer\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}