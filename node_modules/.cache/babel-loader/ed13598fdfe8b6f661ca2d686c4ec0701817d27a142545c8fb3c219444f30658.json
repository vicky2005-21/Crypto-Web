{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\nlet {\n  fileURLToPath,\n  pathToFileURL\n} = require('url');\nlet {\n  resolve,\n  isAbsolute\n} = require('path');\nlet {\n  nanoid\n} = require('nanoid/non-secure');\nlet terminalHighlight = require('./terminal-highlight');\nlet CssSyntaxError = require('./css-syntax-error');\nlet PreviousMap = require('./previous-map');\nlet fromOffsetCache = Symbol('fromOffsetCache');\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(resolve && isAbsolute);\nclass Input {\n  constructor(css) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n    this.css = css.toString();\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n    if (opts.from) {\n      if (!pathAvailable || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve(opts.from);\n      }\n    }\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>';\n    }\n    if (this.map) this.map.file = this.from;\n  }\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n');\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + (max - min >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break;\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    };\n  }\n  error(message, line, column) {\n    let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let result, endLine, endColumn;\n    if (line && typeof line === 'object') {\n      let start = line;\n      let end = column;\n      if (typeof line.offset === 'number') {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result = new CssSyntaxError(message, origin.endLine === undefined ? origin.line : {\n        line: origin.line,\n        column: origin.column\n      }, origin.endLine === undefined ? origin.column : {\n        line: origin.endLine,\n        column: origin.endColumn\n      }, origin.source, origin.file, opts.plugin);\n    } else {\n      result = new CssSyntaxError(message, endLine === undefined ? line : {\n        line,\n        column\n      }, endLine === undefined ? column : {\n        line: endLine,\n        column: endColumn\n      }, this.css, this.file, opts.plugin);\n    }\n    result.input = {\n      line,\n      column,\n      endLine,\n      endColumn,\n      source: this.css\n    };\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString();\n      }\n      result.input.file = this.file;\n    }\n    return result;\n  }\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({\n      line,\n      column\n    });\n    if (!from.source) return false;\n    let to;\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({\n        line: endLine,\n        column: endColumn\n      });\n    }\n    let fromUrl;\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source);\n    } else {\n      fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\n    }\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    };\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl);\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`);\n      }\n    }\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n    return result;\n  }\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file);\n  }\n  get from() {\n    return this.file || this.id;\n  }\n  toJSON() {\n    let json = {};\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = {\n        ...this.map\n      };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined;\n      }\n    }\n    return json;\n  }\n}\nmodule.exports = Input;\nInput.default = Input;\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input);\n}","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","fileURLToPath","pathToFileURL","resolve","isAbsolute","nanoid","terminalHighlight","CssSyntaxError","PreviousMap","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","Input","constructor","css","opts","arguments","length","undefined","toString","Error","hasBOM","slice","from","test","file","map","text","consumer","mapResolve","id","fromOffset","offset","lastLine","lineToIndex","lines","split","Array","prevIndex","i","l","min","max","mid","line","col","error","message","column","result","endLine","endColumn","start","end","pos","origin","source","plugin","input","url","originalPositionFor","to","fromUrl","URL","sourceRoot","mapFile","protocol","sourceContentFor","root","toJSON","json","name","consumerCache","module","exports","default","registerInput"],"sources":["/Users/vigneshchowdary/Desktop/untitled folder 5/CryptoBucks-Final-Code/node_modules/postcss/lib/input.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof line.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}