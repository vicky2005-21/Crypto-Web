{"ast":null,"code":"'use strict';\n\nlet {\n  isClean,\n  my\n} = require('./symbols');\nlet MapGenerator = require('./map-generator');\nlet stringify = require('./stringify');\nlet Container = require('./container');\nlet Document = require('./document');\nlet warnOnce = require('./warn-once');\nlet Result = require('./result');\nlet parse = require('./parse');\nlet Root = require('./root');\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n};\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n};\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n};\nconst CHILDREN = 0;\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\nfunction getEvents(node) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node.type];\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n  if (key && node.append) {\n    return [type, type + '-' + key, CHILDREN, type + 'Exit', type + 'Exit-' + key];\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key];\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit'];\n  } else {\n    return [type, type + 'Exit'];\n  }\n}\nfunction toStack(node) {\n  let events;\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit'];\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  };\n}\nfunction cleanMarks(node) {\n  node[isClean] = false;\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n  return node;\n}\nlet postcss = {};\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root;\n    if (typeof css === 'object' && css !== null && (css.type === 'root' || css.type === 'document')) {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser = parse;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root);\n      }\n    }\n    this.result = new Result(processor, root, opts);\n    this.helpers = {\n      ...postcss,\n      result: this.result,\n      postcss\n    };\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return {\n          ...plugin,\n          ...plugin.prepare(this.result)\n        };\n      } else {\n        return plugin;\n      }\n    });\n  }\n  get [Symbol.toStringTag]() {\n    return 'LazyResult';\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get css() {\n    return this.stringify().css;\n  }\n  get content() {\n    return this.stringify().content;\n  }\n  get map() {\n    return this.stringify().map;\n  }\n  get root() {\n    return this.sync().root;\n  }\n  get messages() {\n    return this.sync().messages;\n  }\n  warnings() {\n    return this.sync().warnings();\n  }\n  toString() {\n    return this.css;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing;\n  }\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        this.walkSync(root);\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n    }\n    return this.result;\n  }\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n  walkSync(node) {\n    node[isClean] = true;\n    let events = getEvents(node);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return;\n        }\n      }\n    }\n  }\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin;\n      let promise;\n      try {\n        promise = visitor(node, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf);\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true;\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin;\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root => plugin.Once(root, this.helpers));\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n          return roots;\n        }\n        return plugin.Once(this.result.root, this.helpers);\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins');\n  }\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin;\n    try {\n      if (node) node.addToError(error);\n      this.error = error;\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin;\n          let pluginVer = plugin.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split('.');\n          let b = runtimeVer.split('.');\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err);\n    }\n    return error;\n  }\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i];\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        let stack = [toStack(root)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node = stack[stack.length - 1].node;\n              throw this.handleError(e, node);\n            }\n          }\n        }\n      }\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin;\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot => visitor(subRoot, this.helpers));\n              await Promise.all(roots);\n            } else {\n              await visitor(root, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n    this.processed = true;\n    return this.stringify();\n  }\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin, cb]);\n    };\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(`Unknown event ${event} in ${plugin.postcssPlugin}. ` + `Try to update PostCSS (${this.processor.version} now).`);\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter]);\n                } else {\n                  add(plugin, event + '-' + filter.toLowerCase(), plugin[event][filter]);\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n  visitTick(stack) {\n    let visit = stack[stack.length - 1];\n    let {\n      node,\n      visitors\n    } = visit;\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop();\n      return;\n    }\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex];\n      visit.visitorIndex += 1;\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = [];\n        visit.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin;\n      try {\n        return visitor(node.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node);\n      }\n    }\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator;\n      let child;\n      while (child = node.nodes[node.indexes[iterator]]) {\n        node.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n      visit.iterator = 0;\n      delete node.indexes[iterator];\n    }\n    let events = visit.events;\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex];\n      visit.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true;\n          visit.iterator = node.getIterator();\n        }\n        return;\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event];\n        return;\n      }\n    }\n    stack.pop();\n  }\n}\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant;\n};\nmodule.exports = LazyResult;\nLazyResult.default = LazyResult;\nRoot.registerLazyResult(LazyResult);\nDocument.registerLazyResult(LazyResult);","map":{"version":3,"names":["isClean","my","require","MapGenerator","stringify","Container","Document","warnOnce","Result","parse","Root","TYPE_TO_CLASS_NAME","document","root","atrule","rule","decl","comment","PLUGIN_PROPS","postcssPlugin","prepare","Once","Declaration","Rule","AtRule","Comment","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","DocumentExit","OnceExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","node","key","type","prop","toLowerCase","name","append","toStack","events","eventIndex","visitors","visitorIndex","iterator","cleanMarks","nodes","forEach","i","postcss","LazyResult","constructor","processor","css","opts","stringified","processed","map","inline","prev","parser","syntax","error","rebuild","result","helpers","plugins","plugin","Symbol","toStringTag","content","sync","messages","warnings","toString","onFulfilled","onRejected","process","env","NODE_ENV","async","catch","finally","onFinally","Promise","reject","resolve","processing","runAsync","getAsyncError","promise","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","subRoot","visitSync","str","stringifier","data","generate","event","each","child","toProxy","visitor","lastPlugin","e","handleError","proxyOf","parent","roots","all","Error","addToError","setMessage","postcssVersion","pluginName","pluginVer","runtimeVer","version","a","split","b","parseInt","console","err","length","stack","visitTick","add","cb","push","test","filter","Object","keys","visit","pop","indexes","getIterator","registerPostcss","dependant","module","exports","default","registerLazyResult"],"sources":["/Users/vigneshchowdary/Desktop/gta-final/node_modules/postcss/lib/lazy-result.js"],"sourcesContent":["'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}